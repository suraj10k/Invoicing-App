{"version":3,"sources":["hooks/useAuth.js","components/layout/Nav.js","components/layout/ColorModeSwitcher.js","components/layout/Layout.js","components/auth/LoginForm.js","components/auth/ConfirmForm.js","components/route/PrivateRoute.js","components/dashboard/Dashboard.js","components/dashboard/Data.js","components/dashboard/ShowData.js","components/dashboard/Invoice.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AuthContext","createContext","useAuth","useContext","AuthProvider","children","useState","user","setUser","isAuthenticating","SetIsAuthenticating","useEffect","unsubscribe","auth","onAuthStateChanged","values","sendSignInLinkToEmail","email","url","handleCodeInApp","then","signInWithEmailLink","code","result","logout","signOut","Provider","value","Nav","colStart","colSpan","p","bgGradient","borderRadius","to","fontSize","fontWeight","mr","as","onClick","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","aria-label","variant","color","marginLeft","icon","Layout","minH","templateColumns","templateRows","gap","position","top","right","LoginForm","useForm","handleSubmit","register","errors","setError","formState","onSubmit","data","a","type","message","mb","status","mt","isSubmitSuccessful","htmlFor","name","placeholder","ref","colorScheme","isLoading","isSubmitting","ConfirmForm","history","useHistory","location","useLocation","search","push","PrivateRoute","rest","render","Dashboard","companyName","setCompanyName","customerName","setCustomerName","address","setAddress","city","setCity","country","setCountry","items","materials","cost","inputFields","setInputFields","React","setValue","enterData","dataRef","database","customer","handleChangeInput","index","event","target","divider","borderColor","spacing","align","h","onChange","e","minChildWidth","w","map","inputField","ml","lineHeight","console","log","pop","handleDeleteFields","Delete","inputValue","height","window","href","BasicUsage","cname","Add","notes","useDisclosure","isOpen","onOpen","onClose","isCentered","Email","Data","customers","paid","mark","setMark","direction","rightIcon","Check","ShowData","showData","setShowData","fire","on","snapshot","val","id","Invoice","bg","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0be324de.chunk.js","sourcesContent":["import React, { useState,useEffect,useContext,createContext} from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\n\n//Initialise Firebase\nfirebase.initializeApp({\n    apiKey: \"AIzaSyBy55sO1615SVHRt7dq8s0odyKiltjkOv0\",\n    authDomain: \"task-4d5bd.firebaseapp.com\",\n    databaseURL: \"https://task-4d5bd-default-rtdb.asia-southeast1.firebasedatabase.app\",\n    projectId: \"task-4d5bd\",\n    storageBucket: \"task-4d5bd.appspot.com\",\n    messagingSenderId: \"474694366952\",\n    appId: \"1:474694366952:web:5520b2fc7f802cf0097b5d\"\n\n})\n\nconst AuthContext = createContext()\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n    return useContext(AuthContext);\n  };\n\n// Provider hook that creates auth object and handles state\nexport const AuthProvider = ({ children }) => {\n    const [user,setUser] = useState(null);\n    const [isAuthenticating, SetIsAuthenticating] = useState(true) //this is used to prevent the website from going back to the login screen while checking if user is logged in\n\n    const sendSignInLinkToEmail = email => {\n        return firebase.auth().sendSignInLinkToEmail(email,{\n            url: 'http://localhost:3000/confirm',\n            handleCodeInApp:true,\n        }).then(()=>{\n            return true\n        });\n    };\n\n    const signInWithEmailLink = (email,code) => {\n        return firebase.auth().signInWithEmailLink(email,code).then(result => {\n            setUser(result.user)\n            return true\n        });\n    };\n    const logout = () => {\n        return firebase.auth().signOut().then(()=>{\n            setUser(null);\n        })\n    }\n\n    useEffect(()=>{\n        const unsubscribe = firebase.auth().onAuthStateChanged(user=>{\n            setUser(user)\n            SetIsAuthenticating(false)\n        });\n\n        return () => unsubscribe();\n    },[]);\n\n    const values = {\n        user,\n        isAuthenticating,\n        sendSignInLinkToEmail,\n        signInWithEmailLink,\n        logout\n    }\n\n    return(\n       <AuthContext.Provider value={values}>\n           {!isAuthenticating && children}\n       </AuthContext.Provider> \n    )\n};\n","import React from 'react'\nimport { GridItem,Box,Flex,Text } from '@chakra-ui/layout'\nimport {Link} from \"react-router-dom\"\nimport { useAuth } from '../../hooks/useAuth'\n\nconst Nav= () => {\n    const {user,logout} = useAuth()\n\n    return (\n        \n        <GridItem colStart={1} colSpan={3} p={3} bgGradient=\"linear(to-l, #20bf55,#01baef)\" borderRadius=\"md\">\n            <Flex>\n                {user && (\n                    <>\n                    <Link to ='/'>\n                        <Text fontSize=\"md\"   fontWeight=\"bold\" mr={8}>Dashboard</Text>\n                    </Link>\n                    <Box as=\"button\"  onClick={logout}>\n                    <Text fontSize=\"md\" fontWeight=\"bold\" mr={8}>Logout</Text>\n                    </Box>\n                    </>\n                )}\n                {!user && (\n                  <Link to ='/login'>\n                  <Text fontSize=\"md\" fontWeight=\"bold\" mr={8}>Login</Text>\n              </Link>  \n                )}\n            </Flex>\n        </GridItem>\n    )\n}\n\nexport default Nav;","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import React from 'react';\nimport { Grid } from '@chakra-ui/react';\nimport Nav from './Nav';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\n\nconst Layout = ({ children }) => {\n  return (\n    <Grid\n      minH=\"100vh\"\n      templateColumns=\"repeat(3, 1fr)\"\n      templateRows=\"max-content\"\n      gap={6}\n      p={3}\n    >\n        <Nav />\n    <ColorModeSwitcher position=\"absolute\" top={3} right={3} />\n      {children}\n    </Grid>\n  );\n};\n\nexport default Layout;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  Heading,\n  GridItem,\n  Alert,\n  AlertIcon,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n} from '@chakra-ui/react';\n\nimport { useAuth } from '../../hooks/useAuth';\n\nconst LoginForm = () => {\n  const { handleSubmit, register, errors, setError, formState } = useForm();\n\n  const { sendSignInLinkToEmail } = useAuth();\n\n  const onSubmit = async data => {\n    try {\n      await sendSignInLinkToEmail(data.email);\n    } catch (error) {\n      setError('email', {\n        type: 'manual',\n        message: error.message,\n      });\n    }\n  };\n\n  return (\n    <GridItem\n      colStart={[1, null, null, 2, null, null]}\n      colSpan={[3, null, null, 1, null, null]}\n      p={6}\n    >\n      <Heading as=\"h1\" mb={6}>\n        Login\n      </Heading>\n      {errors.email && (\n        <Alert status=\"error\" variant=\"subtle\" mt={6} mb={6}>\n          <AlertIcon />\n          {errors.email.message}\n        </Alert>\n      )}\n      {formState.isSubmitSuccessful && (\n        <Alert status=\"success\" variant=\"subtle\" mt={6} mb={6}>\n          <AlertIcon />\n          Check your email to complete login!\n        </Alert>\n      )}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl>\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <Input name=\"email\" placeholder=\"Email\" ref={register()} />\n          <Button\n            mt={4}\n            colorScheme=\"teal\"\n            isLoading={formState.isSubmitting}\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </FormControl>\n      </form>\n    </GridItem>\n  );\n};\n\nexport default LoginForm;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  Heading,\n  GridItem,\n  Alert,\n  AlertIcon,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n} from '@chakra-ui/react';\nimport { useHistory, useLocation} from 'react-router-dom'; \n\nimport { useAuth } from '../../hooks/useAuth';\n\nconst ConfirmForm = () => {\n  const { handleSubmit, register, errors, setError, formState } = useForm();\n\n  const { signInWithEmailLink } = useAuth();\n\n  const history = useHistory()\n\n  const location = useLocation()\n\n  const onSubmit = async data => {\n    try {\n      await signInWithEmailLink(data.email,location.search)\n      history.push('/')\n    } catch (error) {\n      setError('email', {\n        type: 'manual',\n        message: error.message,\n      });\n    }\n  };\n\n  return (\n    <GridItem\n      colStart={[1, null, null, 2, null, null]}\n      colSpan={[3, null, null, 1, null, null]}\n      p={6}\n    >\n      <Heading as=\"h1\" mb={6}>\n        Login\n      </Heading>\n      {errors.email && (\n        <Alert status=\"error\" variant=\"subtle\" mt={6} mb={6}>\n          <AlertIcon />\n          {errors.email.message}\n        </Alert>\n      )}\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl>\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <Input name=\"email\" placeholder=\"Email\" ref={register()} />\n          <Button\n            mt={4}\n            colorScheme=\"teal\"\n            isLoading={formState.isSubmitting}\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </FormControl>\n      </form>\n    </GridItem>\n  );\n};\n\nexport default ConfirmForm;","import React from 'react';\nimport {Route,Redirect} from \"react-router-dom\";\n\nimport { useAuth } from '../../hooks/useAuth';\n\nconst PrivateRoute = ({children, ...rest}) => {\n    const{user} = useAuth()\n\n    return (\n        <Route\n        {...rest}\n        render={() => user ? children : <Redirect to=\"/login\"/>}\n        ></Route>\n    )\n}\n\nexport default PrivateRoute;","import React,{useState} from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Heading, GridItem, Text , Textarea, Center } from '@chakra-ui/react';\nimport firebase from 'firebase';\nimport { useAuth } from '../../hooks/useAuth';\nimport {\n  Alert,\n  AlertIcon,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n  InputRightElement,\n  Box,\n  SimpleGrid,\n  Flex,\n  Spacer,\n  StackDivider,\n  IconButton,\n  Divider,\n  Grid,\n  useToast,\n} from '@chakra-ui/react';\nimport { Stack, HStack, VStack } from \"@chakra-ui/react\"\nimport { PhoneIcon, AddIcon, WarningIcon ,CheckIcon,EmailIcon,DeleteIcon,SearchIcon,ArrowForwardIcon} from '@chakra-ui/icons'\n\n\nconst Dashboard = () => {\n  const { user } = useAuth();\n  const { handleSubmit, register, errors, setError, formState } = useForm();\n  const [companyName,setCompanyName] = useState('');\n  const [customerName,setCustomerName] = useState('');\n  const [address,setAddress] = useState('');\n  const [city,setCity] = useState('');\n  const [country,setCountry] = useState('');\n  const [inputFields,setInputFields] = useState([\n    { items: '', materials: '', cost: ''}\n  ])\n  const [paid,setPaid] = useState(0)\n  const mark = () => {\n    return setPaid(1);\n  }\n  const [value, setValue] = React.useState(\"\")\n  \n  const handleInputChange = (e) => {\n      let inputValue = e.target.value\n      setValue(inputValue)\n  }  \n  \n  const enterData = () => {\n    const dataRef = firebase.database().ref(\"customer\");\n    const customer = {\n      companyName,\n      customerName,\n      address,\n      city,\n      country,\n      inputFields,\n      value,\n    };\n    dataRef.push(customer);\n  };\n\n  function ToastExample() {\n    const toast = useToast()\n    return (\n      <Button\n        onClick={() =>\n          toast({\n            title: \"Account created.\",\n            description: \"We've created your account for you.\",\n            status: \"success\",\n            duration: 9000,\n            isClosable: true,\n          })\n        }\n      >\n        Show Toast\n      </Button>\n    )\n  }\n\n  function Feature({ title, desc, ...rest }) {\n    return (\n      <Box p={5} shadow=\"md\" borderWidth=\"1px\" {...rest}>\n        <Heading fontSize=\"xl\">{title}</Heading>\n        <Text mt={4}>{desc}</Text>\n      </Box>\n    )\n  }\n\nconst handleChangeInput = (index,event) => {\n  const values = [...inputFields];\n  values[index][event.target.name] = event.target.value;\n  setInputFields(values);\n}\n\nconst handleAddFields = () => {\n  setInputFields([...inputFields, { items:\"\",materials:\"\",cost:\"\"}])\n}\n\nconst handleDeleteFields = (index) =>{\n  const values = [...inputFields];\n  console.log(index)\n  values.pop(index);\n  setInputFields(values);\n}\n\nreturn (\n\n  <GridItem\n      colStart={[1, null, null, 2, null, null]}\n      colSpan={[3, null, null, 1, null, null]}\n      p={1}\n    >\n    <VStack\n        divider={<StackDivider borderColor=\"teal\" />}\n        spacing={4}\n        align=\"stretch\"\n      >\n      <Box h=\"40px\">\n        <Heading as=\"h1\" mb={6}>\n         Dashboard\n        </Heading>\n      </Box>\n      <Text fontSize=\"lg\">Welcome, {user.email} !</Text>\n      <form onSubmit={enterData}>\n        <FormControl>\n        <Box h=\"450px\" mt=\"25px\">\n        <Stack spacing={2}>\n          <FormLabel htmlFor=\"Cname\">Company Name</FormLabel>\n          <Input type='text' onChange={(e) => setCompanyName(e.target.value)} value={companyName} />\n          <FormLabel htmlFor=\"name\">Customer Name</FormLabel>\n          <Input type='text' onChange={(e) => setCustomerName(e.target.value)} value={customerName} />\n          <FormLabel htmlFor=\"Address\">Address</FormLabel>\n          <Input type='text' onChange={(e) => setAddress(e.target.value)} value={address} />\n          <FormLabel htmlFor=\"city\">City</FormLabel>\n          <Input type='text' onChange={(e) => setCity(e.target.value)} value={city} />\n          <FormLabel htmlFor=\"country\">Country</FormLabel>\n          <Input type='text' onChange={(e) => setCountry(e.target.value)} value={country} />\n          <SimpleGrid minChildWidth=\"120px\" spacing=\"40px\"></SimpleGrid>\n        </Stack>\n         </Box>\n         <Box w=\"110%\">\n            <form onSubmit={enterData}>\n              { inputFields.map((inputField,index) => (\n                <div key={index}>\n                  <Grid templateColumns=\"repeat(5, 1fr)\" gap={8}>                    \n                  <Box w=\"100%\" h=\"10%\">\n                    <FormLabel htmlFor=\"items\">Items</FormLabel> \n                    <Input type='text' name=\"items\" value={inputField.items} onChange={event => handleChangeInput(index,event)} /> \n                  </Box>\n                  <Box w=\"100%\" h=\"10%\"> \n                    <FormLabel htmlFor=\"Materials\">Materials</FormLabel> \n                    <Input type='text' name=\"materials\" value={inputField.materials} onChange={event => handleChangeInput(index,event)} />\n                  </Box>\n                  <Box w=\"100%\" h=\"10%\">   \n                    <FormLabel htmlFor=\"labour\">Cost</FormLabel>\n                    <Input type='text' name=\"cost\" value={inputField.cost} onChange={event => handleChangeInput(index,event)} />\n                  </Box>\n                  <Box w=\"100%\" h=\"10%\" align=\"right\">  \n                    <Text fontSize=\"md\" ml={12} lineHeight=\"630%\" >\n                        <IconButton\n                          bgGradient=\"linear(to-l, #01baef,#20bf55)\"\n                          aria-label=\"Call Segun\"\n                          size=\"md\"\n                          borderRadius={7}\n                          onClick={() => handleDeleteFields()}\n                          icon={<DeleteIcon />}\n                        />\n                      </Text>\n                  </Box>\n                  <Box w=\"100%\" h=\"10%\">  \n                      <Text fontSize=\"md\" mr={8} lineHeight=\"630%\" >\n                        <IconButton\n                          bgGradient=\"linear(to-l, #01baef,#20bf55)\"\n                          aria-label=\"Call Segun\"\n                          size=\"md\"\n                          borderRadius={7}\n                          onClick={() => handleAddFields()}\n                          icon={<AddIcon />}\n                        />\n                      </Text>\n                  </Box>\n                    </Grid>\n                </div>\n              ))}\n            </form>\n          </Box>\n          <Box h=\"150%\">\n          <Text mb=\"8px\">Notes:</Text>\n          <Textarea\n            value={value}\n            onChange={handleInputChange}\n            placeholder=\"How to Pay ? , Where to send checks ? , etc.....\"\n            size=\"sm\"\n          />\n          </Box>\n          <SimpleGrid minChildWidth=\"120px\" spacing=\"30px\">\n            <Box height=\"100%\">\n              <Button\n                mt={4}\n                bgGradient=\"linear(to-l, #20bf55,#01baef)\"\n                onClick={enterData}\n              >\n                Submit\n              </Button>\n            </Box>\n            <Box align=\"right\">\n              <Button\n                mt={4}\n                size=\"md\"\n                bgGradient=\"linear(to-l, #01baef,#20bf55)\"\n                variant=\"outline\"\n                onClick={event =>  window.location.href='/showData'}\n                >\n                Show Invoice\n                </Button>\n              </Box>\n          </SimpleGrid>\n        </FormControl>\n      </form>\n      </VStack>\n    </GridItem>\n  );\n};\n\nexport default Dashboard;","import React ,{useState}from 'react'\nimport { useDisclosure } from '@chakra-ui/hooks';\nimport { Badge } from \"@chakra-ui/react\"\nimport { PhoneIcon, AddIcon, WarningIcon ,CheckIcon,EmailIcon,DeleteIcon} from '@chakra-ui/icons'\nimport {\n    Heading,\n    GridItem,\n    Alert,\n    AlertIcon,\n    FormLabel,\n    FormControl,\n    Input,\n    Button,\n    Text,\n    Textarea,\n    Grid,\n    Box,\n    IconButton,\n    Stack,\n  } from '@chakra-ui/react';\n  import {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n  } from \"@chakra-ui/react\"\n  import Dashboard from \"./Dashboard\";\n\n  function BasicUsage({cname,Add,city,country,notes,items}) {\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    return (\n      <>\n        <Button bgGradient=\"linear(to-l, #01baef,#20bf55)\" onClick={onOpen}>Open Modal</Button>\n  \n        <Modal isOpen={isOpen} onClose={onClose} isCentered>\n          <ModalOverlay>\n            <ModalContent>\n              <ModalHeader><Text fontWeight=\"extrabold\">Invoice:</Text></ModalHeader>\n              <ModalCloseButton />\n  \n              <ModalBody>\n                {cname}\n                {Add}\n                {city}\n                {country}\n                {notes}\n                {items}\n              </ModalBody>\n  \n              <ModalFooter>\n                <Button mt={4}  bgGradient=\"linear(to-l, #01baef,#20bf55)\" mr={3} onClick={onClose}>\n                  Close\n                </Button>\n                <IconButton\n                mt={4}\n                variant=\"outline\"\n                colorScheme=\"teal\"\n                aria-label=\"Send email\"\n                icon={<EmailIcon />}\n              /> \n              </ModalFooter>\n            </ModalContent>\n          </ModalOverlay>\n        </Modal>\n      </>\n    )\n  }\nexport default function Data({customers,paid}) {\n  const [mark,setMark] = useState(false)\n\n  const toggle = () => {\n    return setMark(!mark);\n  }\n\n  console.log(mark)\n  return (      \n    <GridItem\n      colStart={[1, null, null, 2, null, null]}\n      colSpan={[3, null, null, 1, null, null]}\n      p={6}>\n      <Stack direction=\"row\">\n        <Heading as=\"h1\" mb={6}>\n        {customers.companyName} {mark ? <Badge variant=\"outline\" colorScheme=\"green\">Paid</Badge> :\n        <Badge variant=\"outline\" colorScheme=\"red\">Pending</Badge>}\n      </Heading>\n      </Stack>\n      <BasicUsage cname={<Text fontSize=\"lg\"><Text color=\"teal.200\" fontWeight=\"bold\">Name : </Text>{customers.customerName}</Text>}\n            Add={<Text fontSize=\"lg\"><Text color=\"teal.200\" fontWeight=\"bold\">Address : </Text>{customers.address}</Text>} \n            city={<Text fontSize=\"lg\"><Text color=\"teal.200\" fontWeight=\"bold\">City : </Text>{customers.city}</Text>}\n            country={<Text fontSize=\"lg\"><Text color=\"teal.200\" fontWeight=\"bold\">Country : </Text>{customers.country}</Text>}\n            notes={<Text fontSize=\"lg\"><Text color=\"teal.200\" fontWeight=\"bold\">Notes : </Text>{customers.value}</Text>}\n            items={customers.inputFields.map((inputFields,index) => (\n            <div key={index}>\n              <Grid mt={8} templateColumns=\"repeat(4, 1fr)\" gap={8}>\n              <Box w=\"100%\" h=\"100%\">\n                <Text fontSize=\"lg\" fontWeight=\"extrabold\" color=\"teal.200\">List {index+1} : </Text>\n              </Box>\n              <Box w=\"100%\" h=\"10%\">  \n                <Text fontSize=\"lg\"><Text color=\"teal.200\" fontWeight=\"extrabold\">Items</Text> {inputFields.items}</Text>\n              </Box>\n              <Box w=\"100%\" h=\"10%\">  \n                <Text fontSize=\"lg\"><Text color=\"teal.200\" fontWeight=\"extrabold\">Materials</Text>{inputFields.materials}</Text>\n              </Box>\n              <Box w=\"100%\" h=\"10%\">  \n                <Text fontSize=\"lg\"><Text color=\"teal.200\" fontWeight=\"extrabold\">Cost</Text>{inputFields.cost}</Text>\n              </Box>\n              </Grid>\n              </div>\n            ))} />\n            <Button onClick={toggle} rightIcon={<CheckIcon />} \n            colorScheme=\"teal\" variant=\"outline\">\n               Mark Paid\n            </Button>\n      </GridItem>\n    )\n}\n\n","import React,{useState,useEffect} from 'react'\nimport fire from \"firebase\"\nimport Data from './Data';\n\nconst ShowData = () => {\nconst [showData,setShowData] = useState();\n\n  useEffect( () => {\n    const dataRef = fire.database().ref(\"customer\");\n    dataRef.on('value',(snapshot) => {\n    const customers = snapshot.val();\n    const showData = [];\n    for (let id in customers){\n      showData.push(customers[id]);\n    }\n    setShowData(showData);\n    });\n  },[]);\n  \nreturn (\n        <div>\n          {showData ? showData.map((customers,index) => (\n              <Data customers={customers} key={index} />\n          )) : \" \"}   \n        </div>\n    )\n}\n\nexport default ShowData;\n","import React from 'react'\nimport { Grid, GridItem , Box,Wrap,WrapItem,Center} from \"@chakra-ui/react\"\nimport Data from \"./Data\"\n\nconst Invoice = ({customers}) => {\n    return (\n        <Wrap>\n  <WrapItem>\n    <Center w=\"180px\" h=\"80px\" >\n      {`name: ${customers.customerName}`}\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w=\"180px\" h=\"80px\" bg=\"green.200\">\n      Box 2\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w=\"180px\" h=\"80px\" bg=\"tomato\">\n      Box 3\n    </Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w=\"180px\" h=\"80px\" bg=\"blue.200\">\n      Box 4\n    </Center>\n  </WrapItem>\n</Wrap>\n    )\n}\n\nexport default Invoice\n\n\n","import React,{useState,useEffect} from 'react';\nimport Layout from './components/layout/Layout';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport {Heading,GridItem} from '@chakra-ui/react';\nimport LoginForm from './components/auth/LoginForm';\nimport ConfirmForm from './components/auth/ConfirmForm';\nimport PrivateRoute from './components/route/PrivateRoute';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ShowData from './components/dashboard/ShowData';\nimport Invoice from './components/dashboard/Invoice';\n\nfunction App() {\n   \n  return (\n    <Router>\n    <Layout>\n    <Switch>\n      <PrivateRoute exact path='/'>\n        <Dashboard/>\n      </PrivateRoute>\n      <PrivateRoute exact path='/showData'>\n        <ShowData />\n      </PrivateRoute> \n      <PrivateRoute exact path='/invoice'>\n        <Invoice />\n      </PrivateRoute>\n      <Route path=\"/login\">\n        <LoginForm />\n      </Route>\n      <Route path='/confirm'>\n        <ConfirmForm />\n      </Route>\n      <Route>\n      <GridItem\n      colStart={[1, null, null, 2, null, null]}\n      colSpan={[3, null, null, 1, null, null]}\n      p={6}\n    >\n      <Heading as=\"h1\" mb={6}>\n        404 : Page not found\n      </Heading>\n      </GridItem>\n      </Route>\n    </Switch>\n    </Layout>\n    </Router>\n  )\n}    \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider,theme } from '@chakra-ui/react';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport {AuthProvider} from './hooks/useAuth';\n\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <ChakraProvider theme={theme}>\n    <AuthProvider>\n    <App />\n    </AuthProvider>\n    </ChakraProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}